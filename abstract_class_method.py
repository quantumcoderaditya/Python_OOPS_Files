# Abstract Class - It is basically a blue print for other classes and abstract base classes cannot be instantiated on their own. So we cannot create objects from abstrct classes like regular classes. And they are used to define common interface or blueprint for subclasses. So Abtract base classes allow you to enforce that certain methods maybe implemented in subclasses. An abstract method is a method that is defined in abstract class but has no implementation so in Python we just mention pass in the method body and any subclasses that inherit from the abstract class are required to provide their own implementation of the abstract method

# Abstract classes or method supports Polymorphism by allowing you to interact with different types of objects through an consistence interface 